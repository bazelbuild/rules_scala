# Test configuration for test/shell/test_twitter_scrooge_toolchains.sh.
workspace(name = "twitter_scrooge_toolchains")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

local_repository(
    name = "rules_scala",
    path = "../..",
)

load("@rules_scala//scala:latest_deps.bzl", "rules_scala_dependencies")

rules_scala_dependencies()

load("@platforms//host:extension.bzl", "host_platform_repo")

host_platform_repo(name = "host_platform")

register_toolchains("@rules_scala_protoc_toolchains//...:all")

load("@rules_java//java:rules_java_deps.bzl", "rules_java_dependencies")

rules_java_dependencies()

load("@bazel_features//:deps.bzl", "bazel_features_deps")

bazel_features_deps()

load("@bazel_skylib//:workspace.bzl", "bazel_skylib_workspace")

bazel_skylib_workspace()

http_archive(
    name = "rules_python",
    sha256 = "9f9f3b300a9264e4c77999312ce663be5dee9a56e361a1f6fe7ec60e1beef9a3",
    strip_prefix = "rules_python-1.4.1",
    url = "https://github.com/bazelbuild/rules_python/releases/download/1.4.1/rules_python-1.4.1.tar.gz",
)

load("@rules_python//python:repositories.bzl", "py_repositories")

py_repositories()

load("@com_google_protobuf//:protobuf_deps.bzl", "protobuf_deps")

protobuf_deps()

load("@rules_java//java:repositories.bzl", "rules_java_toolchains")

rules_java_toolchains()

load("@rules_proto//proto:repositories.bzl", "rules_proto_dependencies")

rules_proto_dependencies()

load("@rules_proto//proto:setup.bzl", "rules_proto_setup")

rules_proto_setup()

load("@rules_proto//proto:toolchains.bzl", "rules_proto_toolchains")

rules_proto_toolchains()

load("@rules_scala//protoc:toolchains.bzl", "scala_protoc_toolchains")

scala_protoc_toolchains(name = "rules_scala_protoc_toolchains")

RULES_JVM_EXTERNAL_TAG = "6.7"

RULES_JVM_EXTERNAL_SHA = "a1e351607f04fed296ba33c4977d3fe2a615ed50df7896676b67aac993c53c18"

http_archive(
    name = "rules_jvm_external",
    sha256 = RULES_JVM_EXTERNAL_SHA,
    strip_prefix = "rules_jvm_external-%s" % RULES_JVM_EXTERNAL_TAG,
    url = "https://github.com/bazel-contrib/rules_jvm_external/releases/download/%s/rules_jvm_external-%s.tar.gz" % (RULES_JVM_EXTERNAL_TAG, RULES_JVM_EXTERNAL_TAG),
)

load("@rules_jvm_external//:repositories.bzl", "rules_jvm_external_deps")

rules_jvm_external_deps()

load("@rules_jvm_external//:setup.bzl", "rules_jvm_external_setup")

rules_jvm_external_setup()

load("@rules_jvm_external//:defs.bzl", "maven_install")

maven_install(
    artifacts = [
        "com.github.scopt:scopt_2.12:4.0.0-RC2",
        "com.github.spullara.mustache.java:compiler:0.8.18",
        "com.twitter:scrooge-core_2.12:21.2.0",
        "com.twitter:scrooge-generator_2.12:21.2.0",
        "com.twitter:util-core_2.12:21.2.0",
        "com.twitter:util-logging_2.12:21.2.0",
        "javax.annotation:javax.annotation-api:1.3.2",
        "org.apache.thrift:libthrift:0.10.0",
    ],
    maven_install_json = "//:maven_install.json",
    repositories = [
        "https://repo1.maven.org/maven2",
    ],
)

load("@maven//:defs.bzl", "pinned_maven_install")

pinned_maven_install()

load("@rules_scala//:scala_config.bzl", "scala_config")

scala_config(scala_version = "2.12.20")

load(
    "@rules_scala//scala:toolchains.bzl",
    "scala_register_toolchains",
    "scala_toolchains",
)

# When using `setup_scrooge_toolchain` with all its dependencies specified in a
# `BUILD` file, you don't need to instantiate this builtin toolchain. In that
# case, make sure to register your custom toolchain via `register_toolchains`
# (see below). See the `//:toolchain_from_build_file` comments in the `BUILD`
# file for further details.
#
# It's OK to remove any of these overrides in order to use the builtin defaults
# for those dependencies instead.
#
# However, if you remove the `scrooge_generator` override, the toolchain will
# also depend on the builtin `mustache` and `scopt` repos. You will need to
# remove the `mustache` and `scopt` overrides, too, to use the builtin repos
# instead.
scala_toolchains(
    twitter_scrooge = {
        "libthrift": "@maven//:org_apache_thrift_libthrift",
        "scrooge_core": "@maven//:com_twitter_scrooge_core_2_12",
        "scrooge_generator": "@maven//:com_twitter_scrooge_generator_2_12",
        "util_core": "@maven//:com_twitter_util_core_2_12",
        "util_logging": "@maven//:com_twitter_util_logging_2_12",
        "javax_annotation_api": "@maven//:javax_annotation_javax_annotation_api",
        "mustache": "@maven//:com_github_spullara_mustache_java_compiler",
        "scopt": "@maven//:com_github_scopt_scopt_2_12",
    },
)

# To depend on the toolchain defined by `setup_scala_toolchain` by default,
# instead of the builtin toolchain, uncomment this line. You can also specify it
# on demand via:
#
#   bazel build --extra_toolchains=//:toolchain_from_build_file //...
#
#register_toolchains("//:toolchain_from_build_file")

scala_register_toolchains()
